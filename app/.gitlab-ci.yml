stages:
  - test
  - build
  - deploy

default:
  tags:
    - runner-dummy

unit_tests:
  stage: test
  script:
    - echo "Running unit tests..."
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

docker_build:
  image: docker:cli
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    DOCKER_DRIVER: overlay2 # Recommended by Docker
  before_script:
    - apk add --no-cache bash
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  after_script:
    - docker rmi $(docker images -q) || true # Delete old images
  script:
    - |
      if [ -z "$CI_COMMIT_TAG" ]; then
        DOCKER_TAG="beta-$CI_COMMIT_SHORT_SHA"
      else
        DOCKER_TAG=$CI_COMMIT_TAG
      fi
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "main"'
      exists:
        - Dockerfile

proyect_deploy:
  stage: deploy
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws ecs update-service --cluster mi-cluster --service mi-servicio --force-new-deployment
  only:
    - main
